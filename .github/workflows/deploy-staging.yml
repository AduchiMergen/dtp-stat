# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy app via docker image

on:
  workflow_dispatch:
   inputs:
      version:
        description: 'Docker version label'
        required: true
        default: 'latest'
jobs:
  deploy_from_regestry:
    name: Deploy docker image and run containers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install SSH Key
        uses: ./.github/actions/docker-ssh
        with:
          host: ${{ secrets.STAGING_HOST }}
          key: ${{ secrets.STAGING_KEY }}

      - name: Apply database migrations
        run: |
          ssh root@${{ secrets.STAGING_HOST }} << EOF
          docker rm -f dtpstat-app-cli
          docker run --pull=always --network host --entrypoint ./manage.py --name dtpstat-app-cli --env-file /home/dtpstat/dtpstat.env registry.digitalocean.com/dtp-stat/dtp-stat:${{ github.event.inputs.version }} migrate
          EOF

      - name: Apply client changes
        run: |
          ssh root@${{ secrets.STAGING_HOST }} << EOF
          docker rm -f dtpstat-app-cli-static
          docker run --pull=always --network host --entrypoint ./manage.py --name dtpstat-app-cli-static --env-file /home/dtpstat/dtpstat.env registry.digitalocean.com/dtp-stat/dtp-stat:${{ github.event.inputs.version }} collectstatic --noinput
          docker cp dtpstat-app-cli-static:/app/static/ /home/dtpstat/www
          EOF

      - name: Replace current version of app with new
        run: |
          ssh root@${{ secrets.STAGING_HOST }} << EOF
          docker stop dtpstat-app
          docker rm dtpstat-app
          docker run -d --pull=always --network host --name dtpstat-app --env-file /home/dtpstat/dtpstat.env registry.digitalocean.com/dtp-stat/dtp-stat:${{ github.event.inputs.version }}
          EOF

      - name: Replace scheduled tasks with new version
        run: |
          ssh root@${{ secrets.STAGING_HOST }} << EOF
          docker rm -f dtpstat-app-cli-dtp dtpstat-app-cli-opendata
          docker create -v /home/dtpstat/www/media:/app/media --pull=always --network host --name dtpstat-app-cli-dtp --env-file /home/dtpstat/dtpstat.env registry.digitalocean.com/dtp-stat/dtp-stat:${{ github.event.inputs.version }} dtp
          docker create -v /home/dtpstat/www/media:/app/media --pull=always --network host --name dtpstat-app-cli-opendata --env-file /home/dtpstat/dtpstat.env registry.digitalocean.com/dtp-stat/dtp-stat:${{ github.event.inputs.version }} opendata
          EOF