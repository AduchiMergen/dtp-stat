# Generated by Django 3.0.4 on 2020-05-19 16:28

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, db_index=True, default=None, help_text='slug', max_length=1000, null=True)),
                ('datetime', models.DateTimeField(blank=True, db_index=True, default=None, help_text='datetime', null=True)),
                ('address', models.CharField(blank=True, db_index=True, default=None, help_text='address', max_length=1000, null=True)),
                ('street', models.CharField(blank=True, db_index=True, default=None, help_text='street', max_length=1000, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(default=None, help_text='coordinates', null=True, srid=4326)),
                ('participants', models.IntegerField(blank=True, db_index=True, default=None, help_text='participants count', null=True)),
                ('injured', models.IntegerField(blank=True, db_index=True, default=None, help_text='injured count', null=True)),
                ('dead', models.IntegerField(blank=True, db_index=True, default=None, help_text='dead count', null=True)),
                ('scheme', models.CharField(blank=True, default=None, help_text='scheme number', max_length=100, null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='extra data', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, default=None, help_text='category', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Light',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nearby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, help_text='name', max_length=1000, null=True)),
                ('slug', models.CharField(blank=True, default=None, help_text='slug', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoadCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Severity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(blank=True, help_text='level', null=True)),
                ('name', models.CharField(blank=True, default=None, help_text='name', max_length=1000, null=True)),
                ('keywords', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, db_index=True, default=None, help_text='brand', max_length=1000, null=True)),
                ('vehicle_model', models.CharField(blank=True, db_index=True, default=None, help_text='model', max_length=1000, null=True)),
                ('color', models.CharField(blank=True, db_index=True, default=None, help_text='color', max_length=1000, null=True)),
                ('year', models.IntegerField(blank=True, db_index=True, default=None, help_text='year', null=True)),
                ('category', models.ForeignKey(blank=True, default=None, help_text='category', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.VehicleCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, default=None, help_text='name', max_length=1000, null=True)),
                ('slug', models.CharField(blank=True, db_index=True, default=None, help_text='slug', max_length=1000, null=True)),
                ('gibdd_code', models.CharField(blank=True, db_index=True, default=None, help_text='gibdd code', max_length=20, null=True)),
                ('level', models.IntegerField(blank=True, db_index=True, default=None, help_text='level', null=True)),
                ('parent_region', models.ForeignKey(blank=True, default=None, help_text='Parent region', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, db_index=True, default=None, help_text='role', max_length=1000, null=True)),
                ('driving_experience', models.IntegerField(blank=True, help_text='Participant driving experience (years)', null=True)),
                ('health_status', models.CharField(blank=True, default=None, help_text='Participant status', max_length=1000, null=True)),
                ('gender', models.CharField(blank=True, default=None, help_text='Participant gender', max_length=1000, null=True)),
                ('dtp', models.ForeignKey(blank=True, default=None, help_text='DTP', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.DTP')),
                ('severity', models.ForeignKey(blank=True, default=None, help_text='severity lvl', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Severity')),
                ('vehicle', models.ForeignKey(blank=True, default=None, help_text='vehicle', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Vehicle')),
                ('violations', models.ManyToManyField(db_index=True, help_text='violations', to='data.Violation')),
            ],
        ),
        migrations.CreateModel(
            name='Geo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, choices=[('gibdd', 'ГИБДД'), ('user', 'Пользователи'), ('geocode', 'Геокодер')], default=None, help_text='data source', max_length=100, null=True)),
                ('street', models.CharField(blank=True, db_index=True, default=None, help_text='street', max_length=1000, null=True)),
                ('address', models.CharField(blank=True, db_index=True, default=None, help_text='address', max_length=1000, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(default=None, help_text='coordinates', null=True, srid=4326)),
                ('dtp', models.ForeignKey(blank=True, default=None, help_text='DTP', null=True, on_delete=django.db.models.deletion.CASCADE, to='data.DTP')),
            ],
        ),
        migrations.AddField(
            model_name='dtp',
            name='light',
            field=models.ForeignKey(blank=True, default=None, help_text='light', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Light'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='nearby',
            field=models.ManyToManyField(db_index=True, help_text='nearby objects', to='data.Nearby'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='participant_categories',
            field=models.ManyToManyField(db_index=True, help_text='ParticipantCategory', to='data.ParticipantCategory'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='region',
            field=models.ForeignKey(blank=True, default=None, help_text='region', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Region'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='road_conditions',
            field=models.ManyToManyField(db_index=True, help_text='Road conditions', to='data.RoadCondition'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='severity',
            field=models.ForeignKey(blank=True, default=None, help_text='severity lvl', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Severity'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='tags',
            field=models.ManyToManyField(db_index=True, help_text='Tags', to='data.Tag'),
        ),
        migrations.AddField(
            model_name='dtp',
            name='weather',
            field=models.ManyToManyField(db_index=True, help_text='weather', to='data.Weather'),
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_index=True, default=None, help_text='date', null=True)),
                ('base_data', models.BooleanField(blank=True, default=False, help_text='tags', null=True)),
                ('tags', models.BooleanField(blank=True, default=False, help_text='tags', null=True)),
                ('region', models.ForeignKey(blank=True, default=None, help_text='region', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.Region')),
            ],
        ),
    ]
